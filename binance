#include <iostream>
#include <curl/curl.h>
#include <nlohmann/json.hpp>

size_t WriteCallback(void* contents, size_t size, size_t nmemb, void* userp) {
    ((std::string*)userp)->append((char*)contents, size * nmemb);
    return size * nmemb;
}

    curl_global_init(CURL_GLOBAL_DEFAULT);
    curl = curl_easy_init();
    
    if (curl) 
        // Задайте URL API биржи криптовалюты
        const char* url = "https://api.binance.com/api/v3/ticker/price?symbol=BTCUSDT";
        
        curl_easy_setopt(curl, CURLOPT_URL, url);
        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, WriteCallback);
        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &response);
        
        res = curl_easy_perform(curl);
        curl_easy_cleanup(curl);
ении запроса: " << curl_easy_strerror(res) << std::endl;
        }
    } else {    std::cout << "Символ: " << symbol << std::endl;
                std::cout << "Цена: " << price << std::endl;
            } catch (const nlohmann::json::exception& e) {
                std::cerr << "Ошибка разбора JSON: " << e.what() << std::endl;
            }
        } else {
            std::cerr << "Ошибка при выполнении запроса: " << curl_easy_strerror(res) << std::endl;
        }
    } else {
        std::cerr << "Ошибка инициализации библиотеки curl." << std::endl;
    }
    
    curl_global_cleanup();
    return 0;
}
